/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.58
 * Generated at: 2022-06-22 06:34:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.qna;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class read_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/Users/admin/Desktop/coffeeProject/coffeemall/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/projectName/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1652924678496L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>문의글 상세내용</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css\" integrity=\"sha384-zCbKRCUGaJDkqS1kPbPd7TveP5iyJE0EjAuZQTgFLD2ylzuqKfdKlfG/eSrtxUkn\" crossorigin=\"anonymous\">\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js\"></script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\" integrity=\"sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/js/bootstrap.min.js\" integrity=\"sha384-VHvPCCyXqtD5DqJeNxl2dtTyhF78xXNXdkwX1CZeRusQfRKp+tA7hAShOK/B/fQ2\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<h1>Q&A 게시판</h1>\r\n");
      out.write("	<hr>\r\n");
      out.write("	\r\n");
      out.write("	<input type=\"hidden\" name=\"qno\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${qDto.qno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("	\r\n");
      out.write("	<table>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td>작성자</td>\r\n");
      out.write("			<td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${qDto.userid}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td>제목</td>\r\n");
      out.write("			<td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${qDto.qTitle}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td>내용</td>\r\n");
      out.write("			<td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${qDto.qContent}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td>작성일</td>\r\n");
      out.write("			<td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${qDto.qWriteDay}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td>수정일</td>\r\n");
      out.write("			<td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${qDto.qUpdateDay}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("	</table> \r\n");
      out.write("	\r\n");
      out.write("	<hr>\r\n");
      out.write("	\r\n");
      out.write("	<h4>첨부파일 목록</h4>\r\n");
      out.write("	<div id=\"uploaditems\"></div>\r\n");
      out.write("	\r\n");
      out.write("	<hr>\r\n");
      out.write("	\r\n");
      out.write("	<form action=\"\" id=\"deleteForm\"></form>\r\n");
      out.write("	\r\n");
      out.write("	<a href=\"/qna/update/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${qDto.qno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">수정</a>\r\n");
      out.write("	<a href=\"#\" id=\"btn_del\">삭제</a>\r\n");
      out.write("	<a href=\"/qna/list\">목록</a>\r\n");
      out.write("	\r\n");
      out.write("	<hr>\r\n");
      out.write("	\r\n");
      out.write("	<!-- 댓글 권한 없음  -->\r\n");
      out.write("	<div>\r\n");
      out.write("		<p>관리자에게만 작성 권한이 있습니다.</p>\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("	<!-- 댓글 권한 있음(관리자 이상)  -->\r\n");
      out.write("	<div>			\r\n");
      out.write("			<textarea id=\"replyText\" name=\"replyText\"  style=\"width:100%; height:100px; resize:none\" ></textarea>				\r\n");
      out.write("			\r\n");
      out.write("			<br>\r\n");
      out.write("				\r\n");
      out.write("			<button id=\"btn_submit_reply\" style=\"margin:auto; display: block;\">입력 완료</button>\r\n");
      out.write("\r\n");
      out.write("			<hr>\r\n");
      out.write("			\r\n");
      out.write("			<h4>Comment</h4>\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("			<div id=\"replies\"></div>\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("	<div class=\"modal fade\" id=\"staticBackdrop\" data-backdrop=\"static\"\r\n");
      out.write("		data-keyboard=\"false\" tabindex=\"-1\"\r\n");
      out.write("		aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\r\n");
      out.write("		<div class=\"modal-dialog\">\r\n");
      out.write("			<div class=\"modal-content\">\r\n");
      out.write("				<div class=\"modal-header\">\r\n");
      out.write("					<h5 class=\"modal-title\" id=\"staticBackdropLabel\">답글 수정</h5>\r\n");
      out.write("					<button type=\"button\" class=\"close\" data-dismiss=\"modal\"\r\n");
      out.write("						aria-label=\"Close\">\r\n");
      out.write("						<span aria-hidden=\"true\">&times;</span>\r\n");
      out.write("					</button>\r\n");
      out.write("				</div>\r\n");
      out.write("				\r\n");
      out.write("				<div class=\"modal-body\">\r\n");
      out.write("					<div>\r\n");
      out.write("						<div id=\"update_rno\" style=\"display:none;\"></div>\r\n");
      out.write("					</div>\r\n");
      out.write("					\r\n");
      out.write("					<div>\r\n");
      out.write("						<label>수정내용</label> <br>\r\n");
      out.write("						<textarea id=\"update_replyText\" rows=\"10\" style=\"width:100%\"></textarea>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("				\r\n");
      out.write("				<div class=\"modal-footer\">\r\n");
      out.write("					<button type=\"button\" class=\"btn btn-secondary\"\r\n");
      out.write("						data-dismiss=\"modal\">취소</button>\r\n");
      out.write("					<button id=\"reply_update_submit\" type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\">수정완료</button>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<script type=\"text/javascript\" src=\"/resources/js/template.js\"></script>	\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	$(document).ready(function() {\r\n");
      out.write("		let qno = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${qDto.qno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\r\n");
      out.write("		\r\n");
      out.write("		getAllUpload(qno, $(\"#uploaditems\"));\r\n");
      out.write("		\r\n");
      out.write("		$(\"#btn_del\").on(\"click\", function() {\r\n");
      out.write("			$(\"#deleteForm\")\r\n");
      out.write("			.attr(\"action\", \"/qna/delete/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${qDto.qno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\")\r\n");
      out.write("			.attr(\"method\", \"post\")\r\n");
      out.write("			.submit();\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		$(\"#btn_submit_reply\").on(\"click\", function() {\r\n");
      out.write("			let replyText = $(\"#replyText\").val();\r\n");
      out.write("			\r\n");
      out.write("			alert(replyText);\r\n");
      out.write("			\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				type : \"post\",\r\n");
      out.write("				url : \"/qna/replies\",\r\n");
      out.write("				data : {\r\n");
      out.write("					qno : qno,\r\n");
      out.write("					replyText : replyText\r\n");
      out.write("				},\r\n");
      out.write("				dataType : \"text\",\r\n");
      out.write("				success : function(result) {\r\n");
      out.write("					if(result == \"SUCCESS\") {\r\n");
      out.write("						getAllReply(qno, $(\"#replies\"));\r\n");
      out.write("					} else {\r\n");
      out.write("						alert(\"입력 실패\");\r\n");
      out.write("					}\r\n");
      out.write("					\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		$(\"#replies\").on(\"click\", \".btn_del\", function() {\r\n");
      out.write("			let rno = $(this).attr(\"data-rno\");\r\n");
      out.write("			\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				type : \"post\",\r\n");
      out.write("				url : \"/qna/replies/delete\",\r\n");
      out.write("				data : {\r\n");
      out.write("					rno : rno\r\n");
      out.write("				},\r\n");
      out.write("				dataType : \"text\",\r\n");
      out.write("				success : function(result) {\r\n");
      out.write("					if(result == \"SUCCESS\") {\r\n");
      out.write("						getAllReply(qno, $(\"#replies\"));\r\n");
      out.write("					}else {\r\n");
      out.write("						alert(\"삭제 실패\");\r\n");
      out.write("					}\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		$(\"#replies\").on(\"click\", \".btn_update\", function() {\r\n");
      out.write("			let rno = $(\".rno\").text();\r\n");
      out.write("			let replyText = $(\".replyText\").text();\r\n");
      out.write("			\r\n");
      out.write("			$(\"#update_rno\").text(rno);\r\n");
      out.write("			$(\"#update_replyText\").text(replyText);\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		$(\"#reply_update_submit\").on(\"click\", function() {\r\n");
      out.write("			let rno = $(\"#update_rno\").text();\r\n");
      out.write("			let replyText = $(\"#update_replyText\").val();\r\n");
      out.write("			\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				type : \"post\",\r\n");
      out.write("				url : \"/qna/replies/update\",\r\n");
      out.write("				data : {\r\n");
      out.write("					rno : rno,\r\n");
      out.write("					replyText : replyText\r\n");
      out.write("				},\r\n");
      out.write("				dataType : \"text\",\r\n");
      out.write("				success : function(result) {\r\n");
      out.write("					if(result == \"SUCCESS\") {\r\n");
      out.write("						getAllReply(qno, $(\"#replies\"));\r\n");
      out.write("					}else {\r\n");
      out.write("						alert(\"수정 실패\");\r\n");
      out.write("					}\r\n");
      out.write("				}\r\n");
      out.write("				\r\n");
      out.write("				\r\n");
      out.write("			});\r\n");
      out.write("			\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		getAllReply(qno, $(\"#replies\"));\r\n");
      out.write("	});\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
